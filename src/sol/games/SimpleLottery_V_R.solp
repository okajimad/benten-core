pragma solidity ^0.4.0;
import "../FixedOddsGame_V8_R8.sol";
import "../FixedOddsGame_V16_R8.sol";

// A lottery that the winners take all bettings in proportion to their bettings
contract SimpleLottery_V ##VOTE_SIZE _R ##RESULT_SIZE	 is FixedOddsGame_V ##VOTE_SIZE _R ##RESULT_SIZE  {

	uint private _payoutPermil; // game owner takes constant rate of all bettings

	constructor(address cashier, address voting, address regulation, uint open_time, uint close_time, bool allow_cancel) public FixedOddsGame_V ##VOTE_SIZE _R ##RESULT_SIZE(cashier, voting, regulation, open_time, close_time, allow_cancel) {
		_payoutPermil = 1000;
	}

	function setPayoutPermil(uint value) public onlyOwner {
		_payoutPermil = value;
	}
	function payoutPermil() public view returns(uint) {
		return _payoutPermil;
	}

	function calculateRefund(VOTE_TYPE content, RESULT_TYPE truth, uint volume) public view returns(uint) {
		if(content!=truth) return 0; //losers

		//TODO overflow check
		return volume * _payoutPermil / 1000;
	}


}
