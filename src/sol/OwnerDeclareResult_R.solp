pragma solidity ^0.4.0;

import "./ICoinCashier.sol";
import "./ResultAnnouncement_R#RESULT_SIZE.sol";

contract OwnerDeclareResult_R ##RESULT_SIZE	is ResultAnnouncement_R ##RESULT_SIZE {

	event Closed(RESULT_TYPE truth);

	RESULT_TYPE private _result;

	constructor(address cashier, address regulation, address owner, uint open_time, uint deadline_time) public ResultAnnouncement_R ##RESULT_SIZE (cashier, regulation, owner, open_time, deadline_time) {
	}
	function truth() public view returns(RESULT_TYPE) {
		return _result;
	}
	function close() public onlyOwnerOrCashier {
	}
	function setTruth(RESULT_TYPE v) public onlyOwner {
		if(getNow() < _deadlineTime)
			ERROR_CASE("current time is before voting close time")
		if(_closed)
			ERROR_CASE("voting is already closed")
		_result = v;
		_closed = true;
		emit Closed(v);
	}

}
