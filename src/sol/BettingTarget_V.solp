pragma solidity ^0.4.0;

import './BentenContractBase.sol';
import './ICoinCashier.sol';
import './IRegulation.sol';

//byteN version
contract BettingTarget_V ##VOTE_SIZE	is BentenContractBase {
	ICoinCashier internal _cashier;
	IRegulation internal _regulation;
////
	
	function verifyContent(VOTE_TYPE content) public view returns(bool);
	function betBody(address sender, VOTE_TYPE content, uint coin) internal;
	function ownerSupplyBody(uint coin) internal;

	function bet(address sender, VOTE_TYPE content, uint coin) public {
		//this restriction is important
		if(msg.sender != address(_cashier)) 
			ERROR_CASE("betting source is not ICoinCashier")
		
		if(!verifyContent(content))
			ERROR_CASE("mulformed betting content")

		betBody(sender, content, coin);
	}

	function ownerSupply(uint coin) public {
		//this restriction is important
		if(msg.sender != address(_cashier)) 
			ERROR_CASE("ownerSupply source is not ICoinCashier")

		ownerSupplyBody(coin);
	}

}